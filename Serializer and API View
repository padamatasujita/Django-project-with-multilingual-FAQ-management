from rest_framework import viewsets
from rest_framework.decorators import action
from rest_framework.response import Response
from .models import FAQ
from .serializers import FAQSerializer
from django.core.cache import cache

class FAQViewSet(viewsets.ModelViewSet):
    queryset = FAQ.objects.all()
    serializer_class = FAQSerializer

    def list(self, request):
        language = request.query_params.get('lang', 'en')
        cache_key = f'faqs_{language}'
        
        # Check cache first
        cached_faqs = cache.get(cache_key)
        if cached_faqs:
            return Response(cached_faqs)

        queryset = self.get_queryset()
        faqs = []
        for faq in queryset:
            faq_data = {
                'id': faq.id,
                'question': faq.get_translated_question(language),
                'answer': faq.get_translated_answer(language)
            }
            faqs.append(faq_data)

        # Cache the result
        cache.set(cache_key, faqs, timeout=3600)  # Cache for 1 hour
        return Response(faqs)
